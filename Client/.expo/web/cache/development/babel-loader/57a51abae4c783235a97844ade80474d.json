{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport * as ImagePicker from 'expo-image-picker';\nimport { useState } from 'react';\nimport { firebase } from \"../Config/firebase\";\nimport { getStorage, uploadString, ref, getDownloadURL, uploadBytesResumable } from 'firebase/storage';\nimport { async } from '@firebase/util';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ImagePickerDemo = function ImagePickerDemo(_ref) {\n  var params = _ref.params;\n\n  var _useState = useState({\n    localURI: 'https://firebasestorage.googleapis.com/v0/b/demoagular1.appspot.com/o/C%C6%A1m.jfif?alt=media&token=5758fda9-a2b7-42f8-91b6-3d2bd27c4058'\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedImage = _useState2[0],\n      setSelectedImage = _useState2[1];\n\n  var openImage = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      var result = yield ImagePicker.launchImageLibraryAsync({\n        base64: true\n      });\n      if (result.cancelled) return;\n      var uri = result.uri;\n      setSelectedImage({\n        localURI: result.uri\n      });\n\n      if (Platform.OS === 'web') {\n        var base64code = result.base64;\n        yield uploadBase64(base64code);\n      } else {\n        var _uri = result.uri;\n        var blobFile = yield convertURI2BlobFile(_uri);\n        yield uploadFile(blobFile);\n      }\n    });\n\n    return function openImage() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var convertURI2BlobFile = function () {\n    var _ref3 = _asyncToGenerator(function* (uri) {\n      var result = yield new Promise(function (resolve, reject) {\n        var xmlRequest = new XMLHttpRequest();\n\n        xmlRequest.onload = function () {\n          resolve(xmlRequest.response);\n        };\n\n        xmlRequest.onerror = function () {\n          console.log(\"error\");\n        };\n\n        xmlRequest.responseType = 'blob';\n        xmlRequest.open(\"GET\", uri, true);\n        xmlRequest.send(null);\n      });\n      return result;\n    });\n\n    return function convertURI2BlobFile(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var uploadFile = function () {\n    var _ref4 = _asyncToGenerator(function* (blobFile) {\n      var imgname = 'img-android-' + new Date().getTime();\n      var storage = getStorage();\n      var storageRef = ref(storage, \"Image/\" + imgname + \".jpg\");\n      var metadata = {\n        contentType: 'image/jpeg'\n      };\n      var uploadTask = uploadBytesResumable(storageRef, blobFile, metadata);\n      uploadTask.on(\"state_changed\", function (snapshot) {}, function (error) {}, function () {\n        getDownloadURL(uploadTask.snapshot.ref).then(function (downloadURL) {\n          console.log('downloadURL', downloadURL);\n        });\n      });\n    });\n\n    return function uploadFile(_x2) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var uploadBase64 = function () {\n    var _ref5 = _asyncToGenerator(function* (base64code) {\n      var imgname = 'img-w-' + new Date().getTime();\n      var storage = getStorage();\n      var storageRef = ref(storage, \"Image/\" + imgname + \".jpg\");\n      var metadata = {\n        contentType: 'image/jpeg'\n      };\n      uploadString(storageRef, base64code, 'base64', metadata).then(function (snapshot) {\n        getDownloadURL(snapshot.ref).then(function (downloadURL) {\n          console.log('downloadURL', downloadURL);\n        });\n      });\n    });\n\n    return function uploadBase64(_x3) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"ImagePicker \"\n    }), _jsx(Image, {\n      source: {\n        uri: selectedImage.localURI\n      },\n      style: styles.img\n    }), _jsx(TouchableOpacity, {\n      style: styles.btn,\n      onPress: openImage,\n      children: _jsx(Text, {\n        children: \"Choose Image\"\n      })\n    })]\n  });\n};\n\nexport default ImagePickerDemo;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center'\n  },\n  title: {\n    fontSize: 20\n  },\n  img: {\n    width: 150,\n    height: 150,\n    borderRadius: 75\n  },\n  btn: {\n    margin: 10\n  }\n});","map":{"version":3,"names":["React","ImagePicker","useState","firebase","getStorage","uploadString","ref","getDownloadURL","uploadBytesResumable","async","ImagePickerDemo","params","localURI","selectedImage","setSelectedImage","openImage","result","launchImageLibraryAsync","base64","cancelled","uri","Platform","OS","base64code","uploadBase64","blobFile","convertURI2BlobFile","uploadFile","Promise","resolve","reject","xmlRequest","XMLHttpRequest","onload","response","onerror","console","log","responseType","open","send","imgname","Date","getTime","storage","storageRef","metadata","contentType","uploadTask","on","snapshot","error","then","downloadURL","styles","container","title","img","btn","StyleSheet","create","flex","alignItems","fontSize","width","height","borderRadius","margin"],"sources":["C:/Users/ASUS/OneDrive/Máy tính/thien/Assignment3/Client/views/ImagePickerDemo.js"],"sourcesContent":["import React from 'react';\r\nimport { Text, View ,StyleSheet, Image, TouchableOpacity,Platform} from 'react-native';\r\nimport * as ImagePicker from 'expo-image-picker'\r\nimport { useState } from 'react';\r\n//step1\r\nimport{firebase} from '../Config/firebase';\r\nimport {getStorage,uploadString,ref,getDownloadURL, uploadBytesResumable} from 'firebase/storage'\r\nimport { async } from '@firebase/util';\r\nconst ImagePickerDemo = ({\r\n    params,\r\n}) => { \r\n    const [selectedImage, setSelectedImage]=useState({localURI:'https://firebasestorage.googleapis.com/v0/b/demoagular1.appspot.com/o/C%C6%A1m.jfif?alt=media&token=5758fda9-a2b7-42f8-91b6-3d2bd27c4058'})\r\n    const openImage =async()=>{\r\n        const result= await ImagePicker.launchImageLibraryAsync({base64:true})\r\n        if(result.cancelled)\r\n        return;\r\n        // console.log(result)\r\n        let uri = result.uri;\r\n        setSelectedImage({localURI: result.uri})\r\n        if(Platform.OS==='web'){\r\n            let base64code =result.base64;\r\n            //upload\r\n            await uploadBase64(base64code)\r\n        }else{\r\n            let uri = result.uri;\r\n            //step1 -> convert uri --> blob\r\n            const blobFile= await convertURI2BlobFile(uri)\r\n            //step2 --> upload to cloud\r\n            await uploadFile(blobFile);\r\n        }\r\n    }\r\n     const convertURI2BlobFile=async(uri)=>{\r\n        const result= await new Promise((resolve,reject)=>{\r\n            let xmlRequest = new XMLHttpRequest();\r\n            xmlRequest.onload=function(){\r\n             resolve (  xmlRequest.response);\r\n            }\r\n            xmlRequest.onerror=function(){\r\n                console.log(\"error\")\r\n            }\r\n            xmlRequest.responseType='blob';\r\n            xmlRequest.open(\"GET\",uri,true);\r\n            xmlRequest.send(null)\r\n        })\r\n        return result;\r\n     }\r\n     const uploadFile=async(blobFile)=>{\r\n        let imgname ='img-android-'+new Date().getTime();\r\n        //step2\r\n        let storage=getStorage();\r\n        let storageRef=ref(storage,`Image/${imgname}.jpg`);\r\n        let metadata={contentType:'image/jpeg'}\r\n\r\n       const uploadTask= uploadBytesResumable(storageRef,blobFile,metadata);\r\n       uploadTask.on(\"state_changed\",\r\n       (snapshot)=>{},\r\n       (error)=>{},\r\n       ()=>{\r\n        getDownloadURL(uploadTask.snapshot.ref).then((downloadURL)=>{\r\n            console.log('downloadURL',downloadURL)\r\n        })\r\n       })\r\n     }\r\n    const uploadBase64=async(base64code)=>{\r\n        let imgname ='img-w-'+new Date().getTime();\r\n        //step2\r\n        let storage=getStorage();\r\n        let storageRef=ref(storage,`Image/${imgname}.jpg`);\r\n        let metadata={contentType:'image/jpeg'}\r\n        uploadString(storageRef,base64code,'base64',metadata).then((snapshot)=>{\r\n            getDownloadURL(snapshot.ref).then((downloadURL)=>{\r\n                console.log('downloadURL',downloadURL)\r\n            })\r\n        })\r\n    }\r\n    \r\n    return(\r\n    <View style={styles.container}>\r\n        <Text style={styles.title}>ImagePicker </Text>\r\n        <Image source={{uri:selectedImage.localURI}}\r\n            style={styles.img}/>\r\n            <TouchableOpacity style={styles.btn} onPress={openImage}>\r\n                <Text>Choose Image</Text>\r\n            </TouchableOpacity>\r\n    </View>\r\n);\r\n}\r\nexport default ImagePickerDemo;\r\nconst styles = StyleSheet.create({\r\n    container:{\r\n        flex: 1,\r\n        alignItems: 'center',\r\n    },\r\n    title:{\r\n        fontSize: 20,\r\n        \r\n    },\r\n    img:{\r\n        width:150,\r\n        height:150,\r\n        borderRadius:75\r\n    },\r\n    btn:{\r\n        margin:10\r\n    }\r\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}